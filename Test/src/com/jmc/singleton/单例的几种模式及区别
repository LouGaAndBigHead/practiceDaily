饿汉式和懒汉式区别:
饿汉式就是类一旦加载，就把单例初始化完成了，保证getInstance的时候，单例是已经存在的
懒汉式是只有当调用getInstance方法时，才会去初始化这个单例。
1.从线程安全角度分析：
饿汉式天生就是线程安全的，可以直接用于多线程而不会出现问题，
懒汉式本身是线程不安全的，为了实现安全有几种写法，3中改造方法在资源加载和性能方面有些区别。
2.资源加载和性能：
饿汉式在类创建的同时就实例化一个静态对象出来，不管之后会不会使用这个单例，都会占据一定的内存，
但是响应的，在第一次调用时速度也会更快，因为其资源已经初始化完成；
懒汉式，会延迟加载，在第一次使用该单例的时候才会实例化对象出来，第一次调用时要做初始化，如果
要做的工作较多，性能上会有些延迟，之后就和饿汉式一样了。

针对懒汉式3种实现方式的区别：
第一种：在方法上加上了同步，虽然线程安全了，但是每次都会同步，会影响性能，毕竟绝大多数是不需要同步的
第二种：在getInstance中做了两个null检查，确保了只有一次调用单例的时候才会做同步，这样也是线程
安全的，同时避免每次都同步的性能损耗。
第三种：利用了classloader的机制来保证初始化instance时只有一个线程，所以也是线程安全的，同时
没有性能损耗